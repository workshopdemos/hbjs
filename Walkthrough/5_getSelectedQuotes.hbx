/*
 * Rename this file by right clicking the file name in the explorer to the right and selecting rename.  The 
 * new file name should be prefixed by your user id.  If your user id is mfwsuser25 your new file name would
 * be mfwsuser25_getSelectedQuotes.hbx
 */

let hb = new HB.Session();

let common = require('common', 'hbutils');
let debugging = require('debugging', 'hbutils');

debugging.checkDebugControl();
common.hbRunProto();

/*
 * Application Explorer: https://external-157476462544637.proxy.sn.ws.broadcom.com/webtools/index.html
 *
 *  
 * Below is most of the code you should have had at the end of 4-getAllQuotes. This service gets
 * all company quotes, but what if you only want the quote for company 1 or for companies 1 and 3, 
 * or for some other combination.  We should be able to pass a parameter to the service to specifiy 
 * what companies we want the real-time quote for instead of always returning all companies.  
 * We will do that by passing a parameter on the query string to specifiy what companies we want 
 * quotes.  Let's get our input in the initialize function.
 */

var response = new Array();

function initialize() {
    hb.set('hb_entry', 'trad');
    hb.run('HB_AID=ENTER', 'T002');

    /*
     * Now that we are passing input in via the query string we can no longer test
     * our service by executing it in VS Code.  From now on we will have to "make" or 
     * deploy our service to test it, if you right-click HB.js Commands > Run the service will fail
     * because there will be no value for companies
     */


    
    let companies = HB.request.http.getValue('companies');

    /* 
     * The value of companies above will be a string containing "1,3".  We need to be able to 
     * iterate over the company numbers.  Luckily there is a method called "split" that hangs off
     * all strings that can split a string into an array based on a separator.
     * companies.split(',') will separate the company numbers into array elements allowing us to
     * easliy interate over them.
     * 
     * We could put companies in a global variable, but using too many global variables is considered 
     * poor programming, instead we will split the string into an array and pass it
     * back to the main function.
     */

    return companies.split(',');
}

function terminate() {

    hb.run('hb_aid=pf12&hb_delete_session=1');

    /*
     * Below I added an http content type header to indicated the output is JSON
     */
    common.headers.json();

    write(common.toJSONString(response));
}


function getQuote(companyNumber) {
    hb.set('OPTION', companyNumber);
    hb.run('HB_AID=ENTER', 'T003');

    hb.set('OPT2', '1');
    hb.run('HB_AID=ENTER', 'T004');

    let quote = {
        companyName: hb.getFieldValue('COMP41'),
        currentPrice: hb.getFieldValue('SHRNOW'),
        sharesHeld: hb.getFieldValue('HELD'),
        buyCommission: hb.getFieldValue('BUY'),
        sellCommission: hb.getFieldValue('Sell'),
        totalValue: hb.getFieldValue('VALUE')
    }

    response.push(quote);

    hb.run('hb_aid=pf3', 'T003');
    hb.run('hb_aid=pf3', 'T002');

}


function main () {
    /*
     * Initialize was updated to return a list of companies we are to
     * get the real-time quote for, so here we must catch that array of
     * companies that are returned
     */
    let companies = initialize();

    /* 
     * Below is our orginal loop.  Updated it to iterate over the list of 
     * companies.  Again there are lots of examples of JavaScript for loops
     * iterating over a list of arrya elements on the net.  After updating
     * the loop below "make it" (right-click HB.js Commands > Make) and then run it from a 
     * browser
     */ 
    
    for (let i = 1; i < 5; i++) {
        getQuote(i.toString());
    }

    /*
     * You can compile and deploy (MAKE) this code by right-clicking in this editor window and selecting 
     * "HB.js Commands > Make". You can invoke the deployed web service by using a web browser and opening the link 
     * below.  Be sure and change the service name to the name you used above.  Do not include the ".hbx" 
     * 
     * https://external-157476462544637.proxy.sn.ws.broadcom.com/hbscript/mfwsuser25_getSelectedQuotes?companies=1,3
     */

    terminate();
}

main();
